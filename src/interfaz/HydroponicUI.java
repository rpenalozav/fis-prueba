package interfaz;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.GroupLayout;
import javax.swing.JOptionPane;
import javax.swing.LayoutStyle;
import javax.swing.border.*;
import fis_hydroponic.FIS_hydroponic;

/**
 *
 * @author amomo
 */
public class HydroponicUI extends javax.swing.JFrame {

    FIS_hydroponic resultados = new FIS_hydroponic();

    /**
     * Creates new form PropinaUI
     */
    public HydroponicUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jPanel1 = new JPanel();
        iconoLabel = new JLabel();
        bannerLabel = new JLabel();
        msj1Label = new JLabel();
        msj2Label = new JLabel();
        colorLabel = new JLabel();
        colorTextField = new JTextField();
        calcularButton = new JButton();
        jScrollPane1 = new JScrollPane();
        resultadoTextArea = new JTextArea();
        humedadLabel = new JLabel();
        humedadTextField = new JTextField();
        temperaturaLabel = new JLabel();
        temperaturaTextField3 = new JTextField();
        radiacionLabel = new JLabel();
        radiacionTextField = new JTextField();
        concentracionLabel = new JLabel();
        concentracionTextField = new JTextField();
        salirButton = new JButton();

        //======== this ========
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        var contentPane = getContentPane();

        //======== jPanel1 ========
        {
            jPanel1.setBorder(new TitledBorder("Hydroponic health"));

            //---- iconoLabel ----
            iconoLabel.setIcon(new ImageIcon(getClass().getResource("/recursos/imagen.png")));
            iconoLabel.setText("jLabel1");

            //---- bannerLabel ----
            bannerLabel.setFont(new Font("Impact", Font.BOLD, 48));
            bannerLabel.setForeground(new Color(0, 153, 204));
            bannerLabel.setText("Hidroponia-FIS");

            colorLabel.setText("Color de la planta:");

            colorTextField.addActionListener(e -> hydroponicTextFieldActionPerformed(e));
            colorTextField.addKeyListener(new KeyAdapter() {
                @Override
                public void keyTyped(KeyEvent e) {
                    hydroponicTextFieldKeyTyped(e);
                }
            });

            //---- calcularButton ----
            calcularButton.setText("Calcular");
            calcularButton.addActionListener(e -> calcularButtonActionPerformed(e));

            //======== jScrollPane1 ========
            {

                //---- resultadoTextArea ----
                resultadoTextArea.setEditable(false);
                resultadoTextArea.setColumns(20);
                resultadoTextArea.setRows(5);
                jScrollPane1.setViewportView(resultadoTextArea);
            }

            humedadLabel.setText("Humedad:");

            humedadTextField.addActionListener(e -> hydroponicTextFieldActionPerformed(e));
            humedadTextField.addKeyListener(new KeyAdapter() {
                @Override
                public void keyTyped(KeyEvent e) {
                    hydroponicTextFieldKeyTyped(e);
                }
            });

            temperaturaLabel.setText("Temperatura:");

            temperaturaTextField3.addActionListener(e -> hydroponicTextFieldActionPerformed(e));
            temperaturaTextField3.addKeyListener(new KeyAdapter() {
                @Override
                public void keyTyped(KeyEvent e) {
                    hydroponicTextFieldKeyTyped(e);
                }
            });

            radiacionLabel.setText("Radiacion solar:");

            radiacionTextField.addActionListener(e -> hydroponicTextFieldActionPerformed(e));
            radiacionTextField.addKeyListener(new KeyAdapter() {
                @Override
                public void keyTyped(KeyEvent e) {
                    hydroponicTextFieldKeyTyped(e);
                }
            });

            concentracionLabel.setText("Concentracion de nutrientes y minerales:");

            concentracionTextField.addActionListener(e -> hydroponicTextFieldActionPerformed(e));
            concentracionTextField.addKeyListener(new KeyAdapter() {
                @Override
                public void keyTyped(KeyEvent e) {
                    hydroponicTextFieldKeyTyped(e);
                }
            });

            GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup()
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(iconoLabel, GroupLayout.PREFERRED_SIZE, 110, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bannerLabel)
                        .addGap(29, 29, 29))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(msj1Label, GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(msj2Label, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(radiacionLabel)
                        .addGap(18, 18, 18)
                        .addComponent(radiacionTextField, GroupLayout.PREFERRED_SIZE, 65, GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 284, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup()
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(colorLabel)
                                .addGap(18, 18, 18)
                                .addComponent(colorTextField, GroupLayout.PREFERRED_SIZE, 65, GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(humedadLabel)
                                .addGap(18, 18, 18)
                                .addComponent(humedadTextField, GroupLayout.PREFERRED_SIZE, 65, GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(temperaturaLabel)
                                .addGap(18, 18, 18)
                                .addComponent(temperaturaTextField3, GroupLayout.PREFERRED_SIZE, 65, GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(concentracionLabel)
                                .addGap(18, 18, 18)
                                .addComponent(concentracionTextField, GroupLayout.PREFERRED_SIZE, 65, GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(calcularButton)))
                        .addContainerGap(178, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
            );
            jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup()
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup()
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(iconoLabel, GroupLayout.PREFERRED_SIZE, 110, GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(bannerLabel)))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(msj1Label)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(msj2Label)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(colorLabel)
                            .addComponent(colorTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup()
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(humedadLabel))
                            .addComponent(humedadTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup()
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(temperaturaLabel))
                            .addComponent(temperaturaTextField3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(radiacionTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(radiacionLabel))
                        .addGroup(jPanel1Layout.createParallelGroup()
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(concentracionLabel))
                            .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(concentracionTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(calcularButton)))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                        .addContainerGap())
            );
        }

        //---- salirButton ----
        salirButton.setText("Salir");
        salirButton.addActionListener(e -> salirButtonActionPerformed(e));

        GroupLayout contentPaneLayout = new GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(contentPaneLayout.createParallelGroup()
                        .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(GroupLayout.Alignment.TRAILING, contentPaneLayout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(salirButton)))
                    .addContainerGap())
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(salirButton)
                    .addGap(15, 15, 15))
        );
        pack();
        setLocationRelativeTo(getOwner());
    }

    private void hydroponicTextFieldActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void hydroponicTextFieldKeyTyped(java.awt.event.KeyEvent evt) {

        char validar = evt.getKeyChar();

        if(Character.isLetter(validar)){

            getToolkit().beep();
            evt.consume();

            JOptionPane.showMessageDialog(rootPane, "Valor inválido. Ingrese solo números");
        }
    }

    private void calcularButtonActionPerformed(java.awt.event.ActionEvent evt) {

        double color = Double.parseDouble(colorTextField.getText().replace(",", "."));
        double humedad = Double.parseDouble(humedadTextField.getText().replace(",", "."));
        double temperatura = Double.parseDouble(temperaturaTextField3.getText().replace(",", "."));
        double radiacion = Double.parseDouble(radiacionTextField.getText().replace(",", "."));
        double concentracion = Double.parseDouble(concentracionTextField.getText().replace(",", "."));
//        System.out.println(color + " " + humedad + " " + temperatura + " " + radiacion + " " + nutriententes);
//        Integer servicio = 5;

        resultadoTextArea.setText(resultados.calcularSalud(color,humedad,temperatura,radiacion,concentracion));
    }

    private void salirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirButtonActionPerformed
        System.exit(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HydroponicUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HydroponicUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HydroponicUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HydroponicUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HydroponicUI().setVisible(true);
            }
        });
    }


    private JPanel jPanel1;
    private JLabel iconoLabel;
    private JLabel bannerLabel;
    private JLabel msj1Label;
    private JLabel msj2Label;
    private JLabel colorLabel;
    private JTextField colorTextField;
    private JButton calcularButton;
    private JScrollPane jScrollPane1;
    private JTextArea resultadoTextArea;
    private JLabel humedadLabel;
    private JTextField humedadTextField;
    private JLabel temperaturaLabel;
    private JTextField temperaturaTextField3;
    private JLabel radiacionLabel;
    private JTextField radiacionTextField;
    private JLabel concentracionLabel;
    private JTextField concentracionTextField;
    private JButton salirButton;
}